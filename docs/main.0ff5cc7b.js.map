{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;AAyCA,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAzCA,IAAA,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,cAQI,EAAyB,CAC3B,CACE,OAAQ,QACR,WAAY,SACZ,MAAO,EAAA,QAAO,QAEhB,CACE,OAAQ,QACR,WAAY,aACZ,MAAO,EAAA,QAAO,YAEhB,CACE,OAAQ,WACR,WAAY,cACZ,MAAO,EAAA,QAAO,aAId,EAAwB,CAAC,IAAK,MAAO,KAErC,EAAqC,EAAU,IAAI,SAAC,EAAG,GACrD,IAAA,EAAI,SAAS,cAAc,KAC3B,EAAO,SAAS,cAAc,QAO3B,OANP,EAAK,YAAc,EAAE,WACrB,EAAK,UAAY,EAAE,MACnB,EAAE,OAAU,GAAA,OAAA,EAAE,OAAd,OACA,EAAE,OAAO,GACT,EAAE,OAAO,EAAY,IACrB,EAAE,UAAY,EAAA,QAAO,IACd,IAGT,OAAO,iBAAiB,OAAQ,WAC9B,EAAW,QAAQ,SAAA,GACjB,SAAS,KAAK,OAAO,KAGjB,IAAA,EAAS,SAAS,cAAc,OACtC,SAAS,KAAK,OAAO,GAEX,EAAA,IAAI,KAAM,KAEjB,CAAE,KAAM,IAEP,MAAM,MAAM,UAAU,SAAC,GACzB,OAAO,MAAM","file":"main.0ff5cc7b.js","sourceRoot":"../src","sourcesContent":["import styles from \"./styles.scss\";\nimport { Elm } from \"./Main.elm\";\n\ninterface Greetings {\n  phrase: string;\n  technology: string;\n  color: string;\n}\n\nlet greetings: Greetings[] = [\n  {\n    phrase: \"Hello\",\n    technology: \"Parcel\",\n    color: styles.parcel\n  },\n  {\n    phrase: \"Oh hi\",\n    technology: \"TypeScript\",\n    color: styles.typescript\n  },\n  {\n    phrase: \"Helllooo\",\n    technology: \"CSS modules\",\n    color: styles.cssModules\n  }\n];\n\nlet punctuation: string[] = [\",\", \"...\", \"!\"];\n\nlet paragraphs: HTMLParagraphElement[] = greetings.map((g, i) => {\n  let p = document.createElement(\"p\");\n  let span = document.createElement(\"span\");\n  span.textContent = g.technology;\n  span.className = g.color;\n  p.append(`${g.phrase}, `);\n  p.append(span);\n  p.append(punctuation[i]);\n  p.className = styles.big;\n  return p;\n});\n\nwindow.addEventListener(\"load\", () => {\n  paragraphs.forEach(p => {\n    document.body.append(p);\n  });\n\n  const elmDiv = document.createElement(\"div\");\n  document.body.append(elmDiv);\n\n  let app = Elm.Main!.init<{\n    ports: { outgoing: \"alert\" };\n  }>({ node: elmDiv });\n\n  app.ports.alert.subscribe((message: string) => {\n    window.alert(message);\n  });\n});\n"]}